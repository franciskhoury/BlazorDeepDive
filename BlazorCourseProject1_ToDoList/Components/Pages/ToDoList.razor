@page "/todolist"
@rendermode InteractiveServer

<style type="text/css">
    ul {
        list-style: none;
        padding-left: 0;
    }

    ​</style>

<h3>To Do List</h3>
<br />

<button type="submit" class="btn btn-primary" @onclick="AddTask">Add Task</button>

<br />
<br />

@if (tasks != null && tasks.Count > 0)
{
    <ul>
        @foreach (Models.ToDoItem task in tasks)
        {
            <li @key="task.IsComplete.ToString() + task.Id">
                <div class="d-flex flex-row align-items-center mb-2" id="@($"taskline-{task.Id}")">
                    <!--
                     <div class="mx-5">
                         <InputCheckbox @bind-Value="task.IsComplete" class="form-check-input" ></InputCheckbox>
                     </div>

                    <div class="mx-2">
                        <InputText @bind-Value="task.Name" id="@($"taskname-{task.Id}")" style="border:none;" class="form-control @(task.IsComplete? "text-decoration-line-through":"")" disabled="@task.IsComplete"></InputText>
                    </div>
                    -->

                    <div>
                        <input type="checkbox" @bind-value="task.IsComplete" class="form-check-input" checked="@task.IsComplete"></input>
                    </div>

                    <div class="mx-2">
                        <input type="text" @bind-value="task.Name" class="form-control border-0 @(task.IsComplete? "text-decoration-line-through":"")" disabled="@task.IsComplete" />
                    </div>


                    <div>
                        <text>
                            @(task.IsComplete ? $"Completed at: {task.CompletedTime.ToString()}" : "")
                        </text>
                    </div>

                </div>
            </li>
        }
    </ul>
}


@code {
    private Models.ToDoItem task { get; set; } = new Models.ToDoItem();
    private List<Models.ToDoItem> tasks = ToDoRepo.GetTasks();

    private void AddTask()
    {
        ToDoRepo.AddTask();
        tasks = ToDoRepo.GetTasks();
    }

}
