@page "/servers"
@page "/servers/back_from/{CityName}"

@rendermode InteractiveServer

@inject NavigationManager NavigationManager

<h3>Servers</h3>
<br />
<br />

<CityListComponent 
    @ref="cityListComponent"
    SelectedCity="@selectedCity"
    SelectCityCallback="HandleCitySelection">
</CityListComponent>

<br />

<SearchbarComponent
    @ref="searchbarComponent"
    SetSearchFilterCallback="HandleSearch"
    style="width:75%"
    data-searchfilter="yo!">
</SearchbarComponent>

<br />

<CascadingValue Name="SelectedCity" Value="@selectedCity">
    <ServerListComponent 
        @rendermode="InteractiveServer"
        CityName="@selectedCity"
        SearchFilter="@searchFilter">
    </ServerListComponent>
</CascadingValue>

<br />
<a href="/servername" class="btn btn-primary">Add Server</a>



@code {
    [Parameter]
    public string CityName { get; set; }

    private string selectedCity = "Toronto";
    private string searchFilter = "";

    private CityListComponent? cityListComponent;
    private ServerSearchComponent? serverSearchComponent;
    private SearchbarComponent? searchbarComponent;

    private void HandleCitySelection(string cityName)
    {
        selectedCity = cityName;

        this.searchFilter = String.Empty;
        serverSearchComponent?.ClearFilter();
        searchbarComponent?.ClearFilter();
    }

    private void HandleSearch(string serverFilter)
    {
        this.searchFilter = serverFilter;
        cityListComponent?.ClearSelection();
    }

    // Do initialization login in OnAfterRender
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            if (NavigationManager.Uri.Contains("back_from") && !string.IsNullOrWhiteSpace(CityName))
            {
                selectedCity = CityName;
                StateHasChanged();
            }

        }
    }
}
