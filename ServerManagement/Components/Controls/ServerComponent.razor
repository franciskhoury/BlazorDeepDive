@inject NavigationManager NavigationManager

@if(Server != null)
{
    
        <li @key="Server.ServerId">
            @Server.Name in @Server.City is
            <span style="color:@(Server.IsOnline?"green":"red")">
                @(Server.IsOnline ? "online" : "offline")
            </span>
            &nbsp;
            <a href="/servers/@Server.ServerId" class="btn btn-link">Edit</a>
            &nbsp;
            <EditForm Model="Server"
                      FormName="@($"form-server-{Server.ServerId}")"
                      OnValidSubmit="@(() => { DeleteServer(Server.ServerId); })">
                <button type="submit" class="btn btn-primary">Delete</button>
            </EditForm>
        </li>
}

@code {
    [Parameter]
    public Server? Server { get; set; }

    private void DeleteServer(int serverId)
    {
        if (serverId > 0 && ServersRepository.GetServerById(serverId) != null)
        {
            ServersRepository.DeleteServer(serverId);
            NavigationManager.NavigateTo("/servers", true); // This does not work if global rendermode is set to InteractiveServer
        }
    }
}
